name: Daily Weather Update

on:
  schedule:
    # Run every day at 10:00 AM UTC
    - cron: '20 19 * * *'
  workflow_dispatch: # Allows the workflow to be triggered manually if necessary

permissions:
  contents: write # Allows the workflow to update the repository content

jobs:
  collect-weather:
    runs-on: ubuntu-latest # Specify Ubuntu as the virtual machine environment

    steps:
    # Step to clone the repository contents
    - name: Clone repository files
      uses: actions/checkout@v3

    # Install required dependencies (e.g., wget for downloading files)
    - name: Install required packages
      run: sudo apt-get update && sudo apt-get install -y wget

    # Ensure the weather.sh script is executable before running
    - name: Make weather.sh executable
      run: chmod +x weather.sh

    # Stop the workflow from running after a defined end date
    - name: Validate workflow execution date
      run: |
        current_date=$(date +'%Y-%m-%d')
        deadline="2024-12-31"
        if [[ "$current_date" > "$deadline" ]]; then
          echo "The date $current_date has passed the set deadline $deadline. Exiting."
          exit 0
        fi

    # Execute the weather data retrieval script
    - name: Run weather.sh script
      run: ./weather.sh

    # Check for changes in weather data files and push updates to the repository
    - name: Commit and push updates
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "Automated Runner"
        git config --global user.email "runner@github.com"

        # Synchronize with the remote repository to avoid conflicts
        git fetch origin main

        # Check if there are modifications in the JSON files
        if git diff --quiet data/weather/*.json; then
          echo "No new weather data detected. Exiting."
          exit 0
        fi

        # Stage the updated files and commit the changes
        git add data/weather/*.json
        git commit -m "Weather data update: $(date +'%Y-%m-%d %H:%M:%S')"

        # Push the committed changes back to the repository
        git pull origin main --rebase # Avoid unnecessary merge commits
        git push origin main
